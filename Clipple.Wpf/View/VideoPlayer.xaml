<UserControl x:Class="Clipple.View.VideoPlayer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:converters="clr-namespace:Clipple.Converters"
             xmlns:viewmodel="clr-namespace:Clipple.ViewModel"
             xmlns:view="clr-namespace:Clipple.View"
             xmlns:types="clr-namespace:Clipple.Types"
             xmlns:local="clr-namespace:Clipple" 
             xmlns:System="clr-namespace:System;assembly=netstandard" 
             xmlns:controlzex="urn:controlzex"
             xmlns:wf="clr-namespace:System.Windows.Forms;assembly=System.Windows.Forms"  
             d:DataContext="{d:DesignInstance Type=viewmodel:VideoPlayerViewModel}"
             mc:Ignorable="d" 
             d:DesignHeight="1080" d:DesignWidth="1920" 
             Loaded="OnLoaded">
    <UserControl.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <converters:ComparisonConverter x:Key="ComparisonConverter" />
        <converters:ValueConverterGroup x:Key="InverseVisibilityGT0">
            <converters:GreaterThanZeroConverter />
            <converters:InverseBooleanConverter />
            <BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
        <converters:ValueConverterGroup x:Key="VisibilityGT0">
            <converters:GreaterThanZeroConverter />
            <BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
        <converters:ValueConverterGroup x:Key="ComparisonConverterVisbility" >
            <converters:ComparisonConverter />
            <BooleanToVisibilityConverter />
        </converters:ValueConverterGroup>
    </UserControl.Resources>
    <Grid>
        <Grid Visibility="{Binding Path=State, Converter={StaticResource ComparisonConverterVisbility}, ConverterParameter={x:Static types:MediaPlayerState.Waiting}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <!--<iconPacks:PackIconMaterialDesign Width="100" Height="100" Kind="Info" HorizontalAlignment="Center" Margin="0 0 0 10"  />-->
                <Label Content="Clipple does not have any media yet, try:" FontSize="24" HorizontalAlignment="Center" Margin="0 0 0 10"/>
                <StackPanel>
                    <Label Content="1. Dragging and dropping videos, or folders of videos into Clipple" />
                    <Label Content="2. Opening the videos tab using the top left button and adding videos through the context menu" />
                    <Label Content="3. Right clicking files or folders in the windows file explorer and using the 'Open with Clipple' option" />
                </StackPanel>
            </StackPanel>
        </Grid>
        <Grid Visibility="{Binding Path=State, Converter={StaticResource ComparisonConverterVisbility}, ConverterParameter={x:Static types:MediaPlayerState.Error}}">
            <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                <!--<iconPacks:PackIconMaterialDesign Width="100" Height="100" Kind="Warning" HorizontalAlignment="Center"  />-->
                <Label Content="The media could not be loaded" FontSize="24" HorizontalAlignment="Center" />
                <Label Content="{Binding Path=Video.FileInfo.FullName}" ContentStringFormat="The media could not be loaded" />
            </StackPanel>
        </Grid>
        <Grid Visibility="{Binding Path=State, Converter={StaticResource ComparisonConverterVisbility}, ConverterParameter={x:Static types:MediaPlayerState.Loading}}">
            <!--<mah:ProgressRing />-->
        </Grid>
        <Grid Visibility="{Binding Path=State, Converter={StaticResource ComparisonConverterVisbility}, ConverterParameter={x:Static types:MediaPlayerState.Ready}}">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <WindowsFormsHost Visibility="{Binding Path=OverlayContentCount, Converter={StaticResource InverseVisibilityGT0}}">
                <wf:Panel x:Name="playerHost" />
            </WindowsFormsHost>

            <Grid Background="Black">
                <Image Source="{Binding Path=OverlayFrame}" Visibility="{Binding Path=OverlayContentCount, Converter={StaticResource VisibilityGT0}}" />
            </Grid>

            <Grid Grid.Row="1" VerticalAlignment="Bottom">
                <Grid Grid.Row="0" Grid.ColumnSpan="2" Margin="4">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" MaxWidth="250" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="*" MaxWidth="250" />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                        <RowDefinition Height="auto" />
                    </Grid.RowDefinitions>

                    <!-- Player volume group -->
                    <Grid Grid.Column="0" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>
                        <ToggleButton IsChecked="{Binding Path=IsMuted}" HorizontalAlignment="Left" Grid.Column="0" Width="32" Height="32" ToolTip="Mute" Margin="0 0 4 0">
                            <!--<iconPacks:MaterialDesign Width="20" Height="20" Kind="VolumeOff" />-->
                        </ToggleButton>

                        <Slider Height="30" IsMoveToPointEnabled="True" TickFrequency="5" Value="{Binding Path=Volume, Mode=TwoWay}" IsEnabled="{Binding Path=IsMuted, Mode=TwoWay, Converter={StaticResource InverseBooleanConverter}}" Minimum="0" Maximum="100" TickPlacement="Both" Grid.Column="1" />

                        <Button Grid.Column="2" Width="32" Height="32" ToolTip="Open sound settings" Margin="4 0 0 0" Command="{Binding Path=OpenAudioSettings}" IsEnabled="{Binding Path=HasContent}" >
                            <!--<iconPacks:MaterialDesign Kind="ViewList" />-->
                        </Button>
                    </Grid>

                    <!-- Player controls (play, pause, etc) -->
                    <StackPanel Grid.Column="2" Orientation="Horizontal">
                        <Button Width="32" Height="32" ToolTip="Previous frame" Margin="0 0 4 0" Command="{Binding Source={x:Static local:AppCommands.PreviousFrameCommand}}" IsEnabled="{Binding Path=IsReady}">
                            <!--<iconPacks:MaterialDesign Kind="ArrowBack" />-->
                        </Button>
                        <Button Width="32" Height="32" ToolTip="Play" Margin="0 0 4 0" Command="{Binding Source={x:Static local:AppCommands.ControlCommand}}" IsEnabled="{Binding Path=IsReady}">
                            <!--<iconPacks:PackIconMaterialDesign>
                                <iconPacks:PackIconMaterialDesign.Style>
                                    <Style TargetType="iconPacks:PackIconMaterialDesign">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsPlaying}" Value="True">
                                                <Setter Property="Kind" Value="Pause" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsPlaying}" Value="False">
                                                <Setter Property="Kind" Value="PlayArrow" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </iconPacks:PackIconMaterialDesign.Style>
                            </iconPacks:PackIconMaterialDesign>-->
                        </Button>
                        <Button  Width="32" Height="32" ToolTip="Next frame" Margin="0 0 0 0" Command="{Binding Source={x:Static local:AppCommands.NextFrameCommand}}" IsEnabled="{Binding Path=HasContent}">
                            <!--<iconPacks:MaterialDesign Kind="ArrowForward"  />-->
                        </Button>
                    </StackPanel>

                    <!-- Zoom control -->
                    <Grid Grid.Column="4" VerticalAlignment="Center" >
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="auto" />
                        </Grid.ColumnDefinitions>

                        <Button Grid.Column="0" Width="24" Height="24" Margin="0 0 4 0" Command="{Binding Path=ZoomOut}" IsEnabled="{Binding Path=HasContent}" >
                            <!--<iconPacks:MaterialDesign Kind="Remove" />-->
                        </Button>

                        <Slider Grid.Column="1" Height="30" IsMoveToPointEnabled="True" TickFrequency="0.05"  TickPlacement="Both" Minimum="0" Maximum="1" 
                                Value="{Binding Path=Zoom, Mode=TwoWay}" 
                                IsEnabled="{Binding Path=HasContent}" />

                        <Button Grid.Column="2" Width="24" Height="24" Margin="4 0 0 0" Command="{Binding Path=ZoomIn}" IsEnabled="{Binding Path=HasContent}" >
                            <!--<iconPacks:MaterialDesign Kind="Add" />-->
                        </Button>
                    </Grid>
                </Grid>
            </Grid>

            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                
                <!-- Audio streams -->
                <Grid Grid.Row="1" Margin="0 22 0 34">
                    <ItemsControl ItemsSource="{Binding Path=Video.AudioStreams}">
                        <ItemsControl.ItemTemplate>
                            <DataTemplate>
                                <Grid Height="66" Visibility="{Binding Path=IsEnabled, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="auto" />
                                    </Grid.ColumnDefinitions>
                                    <Label Grid.Column="0" Content="{Binding Path=Name}" HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="18" />

                                    <Button Grid.Column="1" Width="32" Height="32" ToolTip="Open sound settings" Margin="4 0 8 0" HorizontalAlignment="Right"
                                                Command="{Binding Path=OpenCommand}">
                                        <!--<iconPacks:MaterialDesign Kind="Settings" />-->
                                    </Button>

                                    <!--<controlzex:PopupEx IsOpen="{Binding Path=IsOpen}" Placement="MousePoint" StaysOpen="False">
                                        <Border Background="{DynamicResource MahApps.Brushes.ThemeBackground}" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                                            <StackPanel>
                                                <Label HorizontalAlignment="Center" Content="{Binding Path=Name}"  />
                                                <Separator />
                                                <CheckBox Content="Mute stream" Margin="2"
                                                          IsChecked="{Binding Path=IsMuted}" />
                                                <CheckBox Content="Convert to mono" Margin="2" 
                                                          IsChecked="{Binding Path=IsMono}"/>

                                                <Grid>
                                                    <Grid.ColumnDefinitions>
                                                        <ColumnDefinition Width="200" />
                                                        <ColumnDefinition Width="auto" />
                                                    </Grid.ColumnDefinitions>
 
                                                    <Slider Grid.Column="0" Minimum="0" Maximum="100" TickFrequency="5" TickPlacement="Both" IsMoveToPointEnabled="True" Margin="2" Height="32" VerticalAlignment="Center"
                                                            Style="{DynamicResource MahApps.Styles.Slider.Flat}"
                                                            Value="{Binding Path=Volume}"/>
                                                    <mah:NumericUpDown Grid.Column="1"  Minimum="0" Maximum="100" mah:TextBoxHelper.Watermark="Volume" mah:TextBoxHelper.UseFloatingWatermark="True" 
                                                                   Value="{Binding Path=Volume}" />
                                                </Grid>
                                            </StackPanel>
                                        </Border>
                                    </controlzex:PopupEx>-->
                                </Grid>
                            </DataTemplate>
                        </ItemsControl.ItemTemplate>
                    </ItemsControl>
                </Grid>

                <!-- Timeline -->
                <view:Timeline Grid.Column="1" Grid.Row="1" Grid.ColumnSpan="4" Margin="0 2 0 8"
                               Time="{Binding Path=VideoCurrentTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" 
                               ClipStart="{Binding Path=Video.SelectedClip.StartTime, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                               ClipDuration="{Binding Path=Video.SelectedClip.Duration, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                               Duration="{Binding Path=VideoDuration}" 
                               IsDragging="{Binding Path=IsTimelineBusy, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}"
                               Zoom="{Binding Path=Zoom, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                               HasClip="{Binding Path=Video.SelectedClip, Converter={StaticResource ComparisonConverter}, ConverterParameter={x:Null}}" />
            </Grid>
        </Grid>

        <Grid>
            <!--<controlzex:PopupEx IsOpen="{Binding Path=IsAudioSettingsOpen}" Placement="MousePoint" StaysOpen="False">
                <Border Background="{DynamicResource MahApps.Brushes.ThemeBackground}" BorderThickness="1" BorderBrush="{DynamicResource MahApps.Brushes.Accent}">
                    <StackPanel>
                        <Label Content="Enabled audio streams" HorizontalAlignment="Center" />
                        <Separator />
                        <ItemsControl ItemsSource="{Binding Path=Video.AudioStreams, Mode=TwoWay}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding Path=IsEnabled}" Content="{Binding Path=Name}" Margin="2" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </StackPanel>
                </Border>
            </controlzex:PopupEx>-->
        </Grid>
    </Grid>
</UserControl>
