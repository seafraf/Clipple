<UserControl x:Class="Clipple.View.ExportClip"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:Clipple"
             xmlns:viewmodel="clr-namespace:Clipple.ViewModel"
             xmlns:views="clr-namespace:Clipple.View"
             xmlns:types="clr-namespace:Clipple.Types"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             mc:Ignorable="d"
             d:DesignHeight="900" d:DesignWidth="1200" d:DataContext="{d:DesignInstance Type=viewmodel:Media}">
    <materialDesign:DialogHost Identifier="ExportClip">
        <Grid Margin="16" MinWidth="640">
            <Grid.RowDefinitions>
                <RowDefinition Height="*" />
                <RowDefinition Height="auto" />
            </Grid.RowDefinitions>

            <TextBlock x:Name="TextStyleAnchor" Visibility="Collapsed" />

            <StackPanel Grid.Row="0">
                <Grid Margin="0 0 0 8">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" MinWidth="120" />
                    </Grid.ColumnDefinitions>
                    <TextBlock Grid.Column="0" Text="Clip export settings"
                               Style="{StaticResource MaterialDesignHeadline6TextBlock}" />
                    <ComboBox Grid.Column="1" DisplayMemberPath="Name"
                              materialDesign:HintAssist.Hint="Preset"
                              materialDesign:HintAssist.IsFloating="True"
                              SelectionChanged="OnPresetSelectionChanged"
                              SelectedIndex="{Binding Clip.PresetIndex}"
                              ItemsSource="{Binding Path=ClipPresetCollection.Presets, Source={x:Static local:App.ViewModel}}">
                        <ComboBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding Name}" Margin="6 4 0 0 "
                                                   Style="{StaticResource MaterialDesignBody2TextBlock}"
                                                   Foreground="{StaticResource PrimaryHueLightBrush}" />
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ComboBox.GroupStyle>
                    </ComboBox>
                </Grid>

                <Grid Margin="0 0 0 16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="120" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0">
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Source:" />
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="Clip duration:" />
                    </StackPanel>

                    <StackPanel Grid.Column="1">
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}" Text="{Binding Path=FilePath}" />
                        <TextBlock Style="{StaticResource MaterialDesignBody2TextBlock}"
                                   Text="{Binding Path=Clip.Duration, StringFormat=mm\\:ss\\.ff}" />
                    </StackPanel>
                </Grid>

                <Grid Margin="0 0 0 12">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox Grid.Column="0" materialDesign:HintAssist.HelperTextFontSize="12"
                             materialDesign:HintAssist.Hint="Save clip as"
                             materialDesign:TextFieldAssist.LeadingIcon="Warning"
                             Text="{Binding Clip.FileName, UpdateSourceTrigger=PropertyChanged}"
                             materialDesign:TextFieldAssist.SuffixText="{Binding Clip.Extension, StringFormat='{}.{0}'}">
                        <TextBox.Style>
                            <Style TargetType="TextBox" BasedOn="{StaticResource MaterialDesignFilledTextBox}">
                                <Setter Property="materialDesign:TextFieldAssist.PrefixText">
                                    <Setter.Value>
                                        <MultiBinding StringFormat="{}{0}\">
                                            <Binding Path="Settings.ClipOutputFolder"
                                                     Source="{x:Static local:App.ViewModel}" />
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Clip.FileNameExists}" Value="True">
                                        <Setter Property="materialDesign:HintAssist.HelperText"
                                                Value="A file with this name already exists" />
                                        <Setter Property="Margin" Value="0 0 0 6" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Style>
                    </TextBox>

                    <ComboBox Grid.Column="1" materialDesign:HintAssist.Hint="Extension"
                              materialDesign:HintAssist.IsFloating="True" MinWidth="120"
                              Visibility="{Binding Clip.ContainerFormat.Extensions.Count, Converter={StaticResource InverseComparisonVisibilityConverter}, ConverterParameter={StaticResource IntOne}}"
                              SelectedItem="{Binding Clip.Extension}"
                              SelectedIndex="{Binding Clip.ExtensionIndex}"
                              ItemsSource="{Binding Clip.ContainerFormat.Extensions}">
                        <ComboBox.GroupStyle>
                            <GroupStyle>
                                <GroupStyle.HeaderTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding}" />
                                    </DataTemplate>
                                </GroupStyle.HeaderTemplate>
                            </GroupStyle>
                        </ComboBox.GroupStyle>
                        <ComboBox.Style>
                            <Style TargetType="ComboBox" BasedOn="{StaticResource MaterialDesignFilledComboBox}">
                                <Setter Property="Margin" Value="8 0 0 0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Clip.FileNameExists}" Value="True">
                                        <Setter Property="Margin" Value="8 0 0 6" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Grid>

                <Expander Header="Encoding" materialDesign:ExpanderAssist.HorizontalHeaderPadding="0 8 0 0">
                    <StackPanel>
                        <ComboBox Margin="0 0 0 4" materialDesign:HintAssist.Hint="Output format"
                                  Style="{StaticResource MaterialDesignFilledComboBox}"
                                  ItemsSource="{Binding Path=SupportedFormats, Source={x:Static local:App.ContainerFormatCollection}}"
                                  SelectedItem="{Binding Path=Clip.ContainerFormat}"
                                  SelectedIndex="{Binding Path=Clip.ContainerFormatIndex}">
                            <ComboBox.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.HeaderTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"
                                                       d:DataContext="{d:DesignInstance viewmodel:ContainerFormat}" />
                                        </DataTemplate>
                                    </GroupStyle.HeaderTemplate>
                                </GroupStyle>
                            </ComboBox.GroupStyle>
                        </ComboBox>


                        <Grid Margin="0 0 0 4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <ComboBox Margin="0 0 2 0" Grid.Column="0"
                                      materialDesign:HintAssist.Hint="Video codec"
                                      Style="{StaticResource MaterialDesignFilledComboBox}"
                                      ItemsSource="{Binding Clip.ContainerFormat.VideoCodecs}"
                                      IsEnabled="{Binding Clip.ContainerFormat.SupportsVideo}"
                                      SelectedItem="{Binding Path=Clip.VideoCodec}"
                                      SelectedIndex="{Binding Path=Clip.VideoCodecIndex}" />

                            <ComboBox Margin="2 0 0 0" Grid.Column="1"
                                      materialDesign:HintAssist.Hint="Audio codec"
                                      Style="{StaticResource MaterialDesignFilledComboBox}"
                                      ItemsSource="{Binding Clip.ContainerFormat.AudioCodecs}"
                                      IsEnabled="{Binding Clip.ContainerFormat.SupportsAudio}"
                                      SelectedItem="{Binding Path=Clip.AudioCodec}"
                                      SelectedIndex="{Binding Path=Clip.AudioCodecIndex}" />
                        </Grid>
                        
                        <TextBox materialDesign:HintAssist.HelperTextFontSize="12"
                                 materialDesign:HintAssist.Hint="Extra FFMPEG flags"
                                 Text="{Binding Clip.ExtraOptions, UpdateSourceTrigger=PropertyChanged}"
                                 Style="{StaticResource MaterialDesignFilledTextBox}" />

                        <CheckBox Content="Two-Pass encoding" Margin="0 0 0 16"
                                  IsChecked="{Binding Clip.UseTargetSize}" />

                        <TextBlock Margin="0 0 0 8"
                                   Visibility="{Binding Path=Clip.UseTargetSize, Converter={StaticResource InverseBoolToVisConverter}}">
                            <Run Text="Two-Pass encoding is required to target a specific output size." />
                            <LineBreak />
                            <Run
                                Text="If Two-Pass encoding is used, video bitrate and audio bitrate will be set automatically." />
                        </TextBlock>

                        <TextBox materialDesign:HintAssist.Hint="Output target size"
                                 materialDesign:TextFieldAssist.SuffixText="Megabytes"
                                 Style="{StaticResource MaterialDesignFilledTextBox}"
                                 IsEnabled="{Binding Clip.TwoPassEncoding}"
                                 Text="{Binding Clip.OutputTargetSize, UpdateSourceTrigger=PropertyChanged}" />
                    </StackPanel>
                </Expander>
                
                <Expander Header="Video" materialDesign:ExpanderAssist.HorizontalHeaderPadding="0 8 0 0">
                    <Expander.Visibility>
                        <MultiBinding Converter="{StaticResource BooleanAllVisibilityConverter}">
                            <Binding Path="HasVideo" />
                            <Binding Path="Clip.ContainerFormat.SupportsVideo" />
                        </MultiBinding>
                    </Expander.Visibility>
                    <StackPanel>
                        <Grid Margin="0 0 0 8">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" /> 
                                <ColumnDefinition Width="Auto" /> 
                                <ColumnDefinition Width="Auto" /> 
                                <ColumnDefinition Width="Auto" /> 
                            </Grid.ColumnDefinitions>
                            
                            <TextBox Grid.Column="0" materialDesign:HintAssist.Hint="Target bitrate" Margin="0 0 2 0"
                                     materialDesign:TextFieldAssist.SuffixText="Bits/second"
                                     IsEnabled="{Binding Clip.TwoPassEncoding, Converter={StaticResource InverseBooleanConverter}}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.VideoBitrate, UpdateSourceTrigger=PropertyChanged}" />
                            
                            <TextBox Grid.Column="1" materialDesign:HintAssist.Hint="Video bitrate min" Margin="2 0 2 0"
                                     ToolTip="The maximum amount of bits that can the bitrate can go under the target video bitrate.  Leaving this at zero lets the codec decide."
                                     materialDesign:TextFieldAssist.SuffixText="Bits/second"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.VideoBitrateMinOffset, UpdateSourceTrigger=PropertyChanged}" />
                            
                            <TextBox Grid.Column="2" materialDesign:HintAssist.Hint="Video bitrate max"  Margin="2 0 0 0"
                                     ToolTip="The maximum amount of bits that can the bitrate can go over the target video bitrate.  Leaving this at zero lets the codec decide."
                                     materialDesign:TextFieldAssist.SuffixText="Bits/second"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.VideoBitrateMaxOffset, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>

                        <CheckBox Content="Change video FPS" Margin="0 0 0 4"
                                  IsChecked="{Binding Clip.UseSourceFps, Converter={StaticResource InverseBooleanConverter}}" />

                        <TextBox materialDesign:HintAssist.Hint="Target FPS"
                                 materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                 IsEnabled="{Binding Clip.UseSourceFps, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}"
                                 Style="{StaticResource MaterialDesignFilledTextBox}"
                                 Text="{Binding Clip.TargetFps, UpdateSourceTrigger=PropertyChanged}" />

                        <CheckBox Content="Crop video" Margin="0 8 0 4"
                                  IsChecked="{Binding Clip.ShouldCrop}" />
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <TextBox Grid.Column="0" materialDesign:HintAssist.Hint="Crop X" Margin="0 0 2 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.ShouldCrop, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.CropX, UpdateSourceTrigger=PropertyChanged}" />
                            
                            <TextBox Grid.Column="1"  materialDesign:HintAssist.Hint="Crop Y" Margin="0 0 2 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.ShouldCrop, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.CropY, UpdateSourceTrigger=PropertyChanged}" />
                            
                            <TextBox Grid.Column="2"  materialDesign:HintAssist.Hint="Crop width" Margin="0 0 2 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.ShouldCrop, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.CropWidth, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBox Grid.Column="3"  materialDesign:HintAssist.Hint="Crop height" Margin="2 0 0 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.ShouldCrop, UpdateSourceTrigger=PropertyChanged}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.CropHeight, UpdateSourceTrigger=PropertyChanged}" />
                        </Grid>
                        
                        <CheckBox Content="Change video resolution" Margin="0 8 0 4"
                                  IsChecked="{Binding Clip.UseSourceResolution, Converter={StaticResource InverseBooleanConverter}}" />
                        
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="auto" MinWidth="120" />
                            </Grid.ColumnDefinitions>

                            <TextBox materialDesign:HintAssist.Hint="Target width" Grid.Column="0" Margin="0 0 2 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.UseSourceResolution, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.TargetWidth, UpdateSourceTrigger=PropertyChanged}" />

                            <TextBox materialDesign:HintAssist.Hint="Target height" Grid.Column="1" Margin="2 0 0 0"
                                     materialDesign:TextFieldAssist.HasTrailingIcon="True"
                                     IsEnabled="{Binding Clip.UseSourceResolution, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}"
                                     Style="{StaticResource MaterialDesignFilledTextBox}"
                                     Text="{Binding Clip.TargetHeight, UpdateSourceTrigger=PropertyChanged}" />

                            <ComboBox materialDesign:HintAssist.Hint="Resolution preset" Grid.Column="2"
                                      Margin="4 0 4 0"
                                      ItemsSource="{Binding Clip.ResolutionPresets}"
                                      SelectedItem="{Binding Clip.ResolutionPreset}"
                                      IsEnabled="{Binding Clip.UseSourceResolution, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}"
                                      Style="{StaticResource MaterialDesignFilledComboBox}"
                                      DisplayMemberPath="ResolutionString">
                                <ComboBox.GroupStyle>
                                    <GroupStyle>
                                        <GroupStyle.HeaderTemplate>
                                            <DataTemplate>
                                                <TextBlock Text="{Binding Name}" />
                                            </DataTemplate>
                                        </GroupStyle.HeaderTemplate>
                                    </GroupStyle>
                                </ComboBox.GroupStyle>
                            </ComboBox>
                        </Grid>
                        
                        <CheckBox Content="Create custom colour palette" Margin="0 4 0 0" IsChecked="{Binding Clip.CreateCustomColorPalette}" />
                    </StackPanel>
                </Expander>
                
                <Expander Header="Audio" materialDesign:ExpanderAssist.HorizontalHeaderPadding="0 8 0 0">
                    <Expander.Visibility>
                        <MultiBinding Converter="{StaticResource BooleanAllVisibilityConverter}">
                            <Binding Path="HasAudio" />
                            <Binding Path="Clip.ContainerFormat.SupportsAudio" />
                        </MultiBinding>
                    </Expander.Visibility>
                    <StackPanel>
                        <TextBox materialDesign:HintAssist.Hint="Audio bitrate" Margin="0 0 0 8"
                                 materialDesign:TextFieldAssist.SuffixText="Bits/second"
                                 IsEnabled="{Binding Clip.TwoPassEncoding, Converter={StaticResource InverseBooleanConverter}}"
                                 Style="{StaticResource MaterialDesignFilledTextBox}"
                                 Text="{Binding Clip.AudioBitrate, UpdateSourceTrigger=PropertyChanged}" />

                        <ItemsControl ItemsSource="{Binding Clip.AudioSettings}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate>
                                    <materialDesign:Card Margin="0 0 0 8">
                                        <StackPanel materialDesign:ElevationAssist.Elevation="Dp8" Margin="4">
                                            <CheckBox Content="{Binding Name}" Margin="4 4 0 0"
                                                      IsChecked="{Binding IsEnabled}"
                                                      materialDesign:CheckBoxAssist.CheckBoxSize="24" />

                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="*" />
                                                    <ColumnDefinition Width="auto" />
                                                    <ColumnDefinition Width="auto" />
                                                </Grid.ColumnDefinitions>

                                                <Expander Grid.Column="0" Header="Audio filters"
                                                          materialDesign:ExpanderAssist.HorizontalHeaderPadding="8 8 4 4"
                                                          IsEnabled="{Binding IsEnabled}" Margin="6">
                                                    <views:AudioFilters DataContext="{Binding}" />
                                                </Expander>

                                                <Button Grid.Column="1" ToolTip="Import filters from Video Editor"
                                                        Style="{StaticResource MaterialDesignIconButton}"
                                                        IsEnabled="{Binding IsEnabled}"
                                                        Command="{Binding DataContext.ImportAudioStreamFiltersCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                        CommandParameter="{Binding AudioStreamIndex}">
                                                    <materialDesign:PackIcon Kind="Import" />
                                                </Button>

                                                <Button Grid.Column="2" ToolTip="Export filters to Video Editor"
                                                        Style="{StaticResource MaterialDesignIconButton}"
                                                        IsEnabled="{Binding IsEnabled}"
                                                        Command="{Binding DataContext.ExportAudioStreamFiltersCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                        CommandParameter="{Binding AudioStreamIndex}">
                                                    <materialDesign:PackIcon Kind="Export" />
                                                </Button>
                                            </Grid>
                                        </StackPanel>
                                    </materialDesign:Card>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <CheckBox Content="Merge enabled audio streams" IsChecked="{Binding Clip.MergeAudio}"
                                  materialDesign:CheckBoxAssist.CheckBoxSize="24" />
                    </StackPanel>
                </Expander>
                
                <Expander Header="Library" materialDesign:ExpanderAssist.HorizontalHeaderPadding="0 8 0 0">
                    <StackPanel>
                        <CheckBox Content="Add clip to library" Margin="0 0 0 8"
                                  IsChecked="{Binding Clip.AddToLibrary}" />

                        <TextBox materialDesign:HintAssist.Hint="Clip description"
                                 Style="{StaticResource MaterialDesignFilledTextBox}"
                                 IsEnabled="{Binding Clip.AddToLibrary}"
                                 Text="{Binding Clip.Description, UpdateSourceTrigger=PropertyChanged}" />
                        
                        <views:TagEditor DataContext="{Binding Clip}" IsEnabled="{Binding AddToLibrary}" />
                    </StackPanel>
                </Expander>
            </StackPanel>

            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <Button Content="Cancel" Margin="0 8 8 0" Grid.Column="1"
                        Command="{x:Static materialDesign:DialogHost.CloseDialogCommand}"
                        Style="{StaticResource MaterialDesignFlatButton}" />
            
                <Button Margin="0 8 8 0" Grid.Column="2" Command="{Binding Path=StartExportCommand}">
                    <Button.Style> 
                        <Style TargetType="Button" BasedOn="{StaticResource MaterialDesignFlatButton}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Clip.FileNameExists}" Value="True">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Export" VerticalAlignment="Center" />
                                                <materialDesign:PackIcon Kind="AlertCircle" Width="18" Height="18" Margin="4 0 0 0" VerticalAlignment="Center" 
                                                                         Foreground="{Binding ElementName=TextStyleAnchor, Path=(TextElement.Foreground)}"/>
                                            </StackPanel>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="ToolTip" Value="Exporting this clip will overwrite an existing file" />
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="Content" Value="Export" />
                        </Style>
                    </Button.Style>
                </Button>
            </Grid>
        </Grid>
    </materialDesign:DialogHost>
</UserControl>