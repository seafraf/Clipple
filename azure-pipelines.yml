trigger:
  tags:
    include:
    - '*'

variables:
- group: Code signing
- name: "solution"
  value: "Clipple.sln"
- name: "buildPlatform"
  value: "x64"
- name: "buildConfiguration"
  value: "Release"

pool:
  vmImage: 'windows-2022'
  
steps:

# Restore using MSBuild (can't use nuget because that complains about vdproj)
- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArchitecture: 'x64'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:RuntimeIdentifier="win-$(buildPlatform)"
                       /t:Restore'
  displayName: 'Build'

# Visual Studio build (required over MSBuild for installer projects)
- task: DevEnvBuild@2
  inputs:
    solution: '$(solution)'
    project: 'Clipple.Setup/Clipple.Setup.vdproj'
    buildCfg: '$(buildConfiguration)'
    buildPlatform: '$(buildPlatform)'
    vsVersion: 'latest'

- task: Bash@3
  inputs:
    targetType: inline
    workingDirectory: $(PIPELINE.WORKSPACE)
    script: ls -R

# - task: NuGetCommand@2
#   inputs:
#     command: 'restore'
#     restoreSolution: 'Clipple.sln'
#     feedsToUse: 'select'
#   displayName: "Nuget"
  
# - task: GitHubRelease@1
#   inputs:
#     gitHubConnection: 'github'
#     repositoryName: '$(Build.Repository.Name)'
#     action: 'create'
#     target: '$(Build.SourceVersion)'
#     tagSource: 'gitTag'
#     assets: '$(Build.ArtifactStagingDirectory)\Packages\*\*.msix'
#     changeLogCompareToRelease: 'lastFullRelease'
#     changeLogType: 'commitBased'
#   displayName: "Release"