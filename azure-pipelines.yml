trigger:
  tags:
    include:
    - '*'

variables:
- group: Code signing
- name: "solution"
  value: "Clipple.sln"
- name: "buildPlatform"
  value: "x64"
- name: "buildConfiguration"
  value: "Release"
- name: "packageDir"
  value: '$(Build.ArtifactStagingDirectory)\Packages'
  
pool:
  vmImage: 'windows-2022'

steps:
- powershell: |
   $versionTag = git describe --tags
   Write-Host "##vso[task.setvariable variable=versionTag]$versionTag"
  displayName: Get git version tag

- powershell: |
     [xml]$manifest= get-content ".\Clipple.MSIX\Package.appxmanifest"
     $manifest.Package.Identity.Version = "$(versionTag)"    
     $manifest.save("Clipple.MSIX\Package.appxmanifest")
  displayName: Update manifest version

- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: 'Clipple.sln'
    feedsToUse: 'select'
  displayName: "Nuget"

- task: DownloadSecureFile@1
  name: signingCert
  inputs:
    secureFile: 'codesign.pfx'
  displayName: 'Cert DL'

- task: MSBuild@1
  inputs:
    solution: '$(solution)'
    msbuildArchitecture: 'x64'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/p:AppxBundlePlatforms="$(buildPlatform)"  
                       /p:RuntimeIdentifier="win-$(buildPlatform)"
                       /p:AppxPackageDir="$(packageDir)"  
                       /p:AppxBundle=Never  
                       /p:UapAppxPackageBuildMode=SideLoadOnly  
                       /p:AppxPackageSigningEnabled=true 
                       /p:PackageCertificateThumbprint=""  
                       /p:PackageCertificateKeyFile="$(signingCert.secureFilePath)" 
                       /p:PackageCertificatePassword="$(codesignpw)"'
  displayName: 'Build'
  
- task: Bash@3
  inputs:
    targetType: inline
    workingDirectory: $(PIPELINE.WORKSPACE)
    script: ls -R

- task: GitHubRelease@1
  inputs:
    gitHubConnection: 'github'
    repositoryName: '$(Build.Repository.Name)'
    action: 'create'
    target: '$(Build.SourceVersion)'
    tagSource: 'gitTag'
    assets: '$(Build.ArtifactStagingDirectory)\Packages\*\*.msix'
    changeLogCompareToRelease: 'lastFullRelease'
    changeLogType: 'commitBased'
  displayName: "Release"